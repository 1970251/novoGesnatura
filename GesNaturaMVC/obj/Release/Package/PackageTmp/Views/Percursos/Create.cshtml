@model GesPhloraClassLibrary.Models.Percurso

@{
    ViewBag.Title = "Create";
}

<h3>Create Percurso</h3>
@using (Html.BeginForm("Create", "Percursos", null, FormMethod.Post, new { enctype = "multipart/form-data" }))

{
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
        
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Nome, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Nome, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Descricao, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Descricao, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Descricao, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Tipologia, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                
                @{
                            List<SelectListItem> listItems = new List<SelectListItem>();
                            listItems.Add(new SelectListItem
                            {
                              Text = "Linear",
                              Value = "Linear"
                            });
                            listItems.Add(new SelectListItem
                            {
                              Text = "Circular",
                              Value = "Circular"

                            });
                            //listItems.Add(new SelectListItem
                            //{
                            //  Text = "3",
                            //  Value = "Exemplo3"
                            //});
                          }

                @Html.DropDownListFor(model => model.Tipologia, listItems, "-- Escolha opção --")
                @Html.ValidationMessageFor(model => model.Tipologia, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Distancia, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Distancia, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Distancia, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DuracaoAproximada, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DuracaoAproximada, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DuracaoAproximada, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Dificuldade, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @{
                    List<SelectListItem> listItemsDif = new List<SelectListItem>();
                    listItemsDif.Add(new SelectListItem
                    {
                      Text = "Baixa",
                      Value = "Baixa"
                    });
                    listItemsDif.Add(new SelectListItem
                    {
                      Text = "Media",
                      Value = "Media"
                    });
                    listItemsDif.Add(new SelectListItem
                    {
                      Text = "Alta",
                      Value = "Alta"
                    });
                }

                @Html.DropDownListFor(model => model.Dificuldade, listItemsDif, "-- Escolha opção --")
                @Html.ValidationMessageFor(model => model.Dificuldade, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.GPS_Lat_Inicio, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.GPS_Lat_Inicio, new { htmlAttributes = new { @class = "form-control" ,@readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.GPS_Lat_Inicio, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.GPS_Long_Inicio, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.GPS_Long_Inicio, new { htmlAttributes = new { @class = "form-control" , @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.GPS_Long_Inicio, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
                @Html.LabelFor(model => model.KmlPath, htmlAttributes: new { @class = "control-label col-md-2" })
          <div class="col-md-10">
            @Html.EditorFor(model => model.KmlPath, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.KmlPath, "", new { @class = "text-danger" })
          </div>
      </div>
        <div class="form-group" not required>
            @Html.LabelFor(model => model.POIs, "POIs", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
              
              @Html.DropDownList("POIs", null, htmlAttributes: new { @class = "form-control" } , optionLabel: "- Opcional -")
              @Html.ValidationMessageFor(model => model.POIs, "", new { @class = "text-danger" })
         </div>
       </div>
         
          
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

