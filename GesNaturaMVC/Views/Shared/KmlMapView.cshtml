@model GesNaturaMVC.ViewModels.PercursoVM

<style>
    #map {
        height: 400px;
        width: 100%;
    }

    #create {
        height: 300px;
        width: 25%;
    }
</style>
<script src="https://www.google.com/jsapi"></script>
<script>
    //google.load('visualization', '1', { packages: ['columnchart'] }); 
  var map;
  var marker;

  function initMap() {

    var model = @Html.Raw(Json.Encode(Model));
    //console.log(model.ListaFotoPercursoVM);
    // Centro do mapa esta no Inicio do Percurso
    var centro = { lat: model.Latitude, lng: model.Longitude };

    var infowindow = new google.maps.InfoWindow();
    var info = new google.maps.InfoWindow();
    var infoWindowPoi = new google.maps.InfoWindow();
    var infoWindowFoto = new google.maps.InfoWindow();


    var map = new google.maps.Map(document.getElementById('map'), {
      zoom: 2,
      center: centro,

      mapTypeId: 'hybrid',
      styles: [
          {   featureType: "label",
              stylers: [{ visibility: "on" }]
          }
      ]
    });

      //var elevacao = new google.maps.EleVationService;
      var elevacao = new google.maps.ElevationService;
      
      

    function loadKmlLayer(kml, map) {
      var kmlLayer = new google.maps.KmlLayer(kml, {
        suppressInfoWindows: true,
        preserveViewport: false,
        map: map
      });

      kmlLayer.addListener('click', function (kmlEvent) {

        var nome = kmlEvent.featureData.name;
        var lat = kmlEvent.latLng.lat();
        var lng = kmlEvent.latLng.lng();
        var percurso = model.ID;

        var actionPoi = '@Html.ActionLink("Adicionar POI", "Create","POIs", new { nome = "nomePoi", lat = "latitude", lng = "longitude",perc="percurso"},null)';
        actionPoi = actionPoi.replace('nomePoi', nome);
        actionPoi = actionPoi.replace('latitude', lat);
        actionPoi = actionPoi.replace('longitude', lng);
        actionPoi = actionPoi.replace('percurso', percurso);

        var texto = '<div>' + nome + '</div>' + actionPoi;
          
        info.setPosition({ lat: lat, lng: lng });
        info.setContent(texto);
        info.open(map);

      });


    }
    loadKmlLayer(model.Kml, map);
      mostraElevacao(model.Kml, elevacao, map);

    for (var i = 0; i < model.ListaPOIVM.length; i++)
    {
      var item = model.ListaPOIVM[i];
      var infoWindowContent = item.Nome;
      var coord = { lat: item.Latitude, lng: item.Longitude };

      var marker = new google.maps.Marker({
          position: coord,
          map: map
        //icon: "https://www.dropbox.com/s/7zs5s8m94m6i09u/hiking.png?dl=1"
      });



      google.maps.event.addListener(marker, 'click', (function (marker, i) {
          return function () {
             @*var actionPoi = '@Html.ActionLink("Adicionar POI", "Details","POIs", new { id = model.ListaPOIVM[i].id},null)';*@
              var str = '<div>' +
                  '<font size="2">' + model.ListaPOIVM[i].Nome + '</font>' + '</div>' +
                  '<div> <font size="2"> ' + model.ListaPOIVM[i].Descricao + '</font></div>';

            @*var strFoto = '<div style="float:center"><img src="/Foto/@Url.Content("path")" alt="" height="150" width="150"></div>';
                strFoto = strFoto.replace("path", model.ListaFotoPoiVM[i].Caminho);*@

          infowindow.setContent(str);
          infowindow.open(map, marker);
        }
      })(marker, i));
    }
    for (var i = 0; i < model.ListaFotoPercursoVM.length; i++) {
        var item = model.ListaFotoPercursoVM[i];

        var coord = { lat: item.GPS_Lat, lng: item.GPS_Lng };
        var markerFoto = new google.maps.Marker({
            position: coord,
            map: map,
            icon: "https://www.dropbox.com/s/xu85d9r2aclt6y1/photo-camera.png?dl=1"
        });
        google.maps.event.addListener(markerFoto, 'click', (function (markerFoto, i) {
            return function () {

                var strFoto = '<div style="float:center"><img src="@Url.Content("path")" alt="" height="150" width="150"></div>';
                var path = "/"+model.ListaFotoPercursoVM[i].Caminho;
                strFoto = strFoto.replace("path", path);
                infoWindowFoto.setContent(strFoto);
                infoWindowFoto.open(map, markerFoto);
            }
        })(markerFoto, i));
    }
    var gestao = "Gestão de Percursos";

    google.maps.event.addListener(map, "click", function (event) {

      var latitude = event.latLng.lat();
      var longitude = event.latLng.lng();
      var percurso = model.ID;
      var coordsrec = latitude + ';' + longitude;
      console.log(latitude + ', ' + longitude);
      markerNovo = new google.maps.Marker({ position: event.latLng, map: map });

      var actionPoi = '@Html.ActionLink("Adicionar POI", "Create","POIs", new { lat = "latitude", lng = "longitude",perc="percurso"},null)';
      actionPoi = actionPoi.replace('latitude', latitude);
      actionPoi = actionPoi.replace('longitude', longitude);
      actionPoi = actionPoi.replace('percurso', percurso);

      var actionFoto = '@Html.ActionLink("Adicionar Foto","Create","FotoPercursos",new {lat="latitude", lng="longitude", perc="percurso" },null)';
      actionFoto = actionFoto.replace('latitude', latitude);
      actionFoto = actionFoto.replace('longitude', longitude);
      actionFoto = actionFoto.replace('percurso', percurso);

      var texto = '<div>' + gestao + '</div>' + actionPoi +
          '<div>'+ actionFoto +'</div>';

      infoWindowPoi.setContent(texto, markerNovo);
      infoWindowPoi.open(map,markerNovo);

    });


    //google.maps.event.addDomListener(window, 'load', initMap);
    //teste(model.kml);
    }

    //function teste(url) {
    //    var kLayer = new google.maps.KmlLayer({
    //        url: url
    //    });
    //    var texto = kLayer;
    //    //console.dir(texto);
    //}

    function mostraElevacao(kml, elevacao, map) {
        
        new google.maps.Polyline({
            path: kml,
            strokeColor: '#0000CC',
            strokeOpacity: 0.4,
            map: map
        });
         // Create a PathElevationRequest object using this array.
        // Ask for 256 samples along that path.
        // Initiate the path request.
        elevacao.getElevationAlongPath({
            'kml': kml,
            'samples': 256
        }, plotElevation);
    }

    // Takes an array of ElevationResult objects, draws the path on the map
    // and plots the elevation profile on a Visualization API ColumnChart.
    function plotElevation(elevations, status) {
        var chartDiv = document.getElementById('elevation_chart');
        if (status !== 'OK') {
            // Show the error code inside the chartDiv.
            chartDiv.innerHTML = 'Cannot show elevation: request failed because ' +
                status;
            return;
        }
        // Create a new chart in the elevation_chart DIV.
        var chart = new google.visualization.ColumnChart(chartDiv);

        // Extract the data from which to populate the chart.
        // Because the samples are equidistant, the 'Sample'
        // column here does double duty as distance along the
        // X axis.
        var data = new google.visualization.DataTable();
        data.addColumn('string', 'Sample');
        data.addColumn('number', 'Elevation');
        for (var i = 0; i < elevations.length; i++) {
            data.addRow(['', elevations[i].elevation]);
        }

        // Draw the chart using the data within its DIV.
        chart.draw(data, {
            height: 150,
            legend: 'none',
            titleY: 'Elevation (m)'
        });
    }


    function loadPlacemark(kml) {
        var klayer = new google.maps.KmlLayer(kml);
        var nome = klayer.featureData.name;
        console.dir(nome);
        //var layer = new google.maps.kmlLayer.getPlacemarks();
        ////var placeMark = container.getPlacemark();
        //for (var placeMark in kmlLayer.getPlacemarks()) {
        //    var nome = placeMark.GetProperty("nome");
        //    console.dir(nome);
        //}


    }




</script>
<div id="map"></div>
<div id="elevation_chart"></div>
<script async defer
        src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCEBJUK6YsccYEXnT_S2PU8PN5zXxkc4Fs&callback=initMap">
</script>



